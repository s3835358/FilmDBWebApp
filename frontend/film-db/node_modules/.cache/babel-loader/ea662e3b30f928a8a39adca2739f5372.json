{"ast":null,"code":"var _jsxFileName = \"D:\\\\Uni\\\\2021\\\\Semester 1\\\\Soft Eng\\\\GroupAssign\\\\film-db\\\\src\\\\pages\\\\admin.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useTable } from 'react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Admin = () => {\n  _s();\n\n  const data = React.useMemo(() => [{\n    col1: 'Hello',\n    col2: 'World'\n  }, {\n    col1: 'react-table',\n    col2: 'rocks'\n  }, {\n    col1: 'whatever',\n    col2: 'you want'\n  }], []);\n  const columns = React.useMemo(() => [{\n    Header: 'Column 1',\n    accessor: 'col1'\n  }, {\n    Header: 'Column 2',\n    accessor: 'col2'\n  }], []);\n  const tableInstance = useTable({\n    columns,\n    data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return (\n    /*#__PURE__*/\n    // apply the table props\n    _jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: // Loop over the header rows\n        headerGroups.map(headerGroup =>\n        /*#__PURE__*/\n        // Apply the header row props\n        _jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: // Loop over the headers in each row\n          headerGroup.headers.map(column =>\n          /*#__PURE__*/\n          // Apply the header cell props\n          _jsxDEV(\"th\", { ...column.getHeaderProps(),\n            children: // Render the header\n            column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 12\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 8\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: // Loop over the table rows\n        rows.map(row => {\n          // Prepare the row for display\n          prepareRow(row);\n          return (\n            /*#__PURE__*/\n            // Apply the row props\n            _jsxDEV(\"tr\", { ...row.getRowProps(),\n              children: // Loop over the rows cells\n              row.cells.map(cell => {\n                // Apply the cell props\n                return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                  children: // Render the cell contents\n                  cell.render('Cell')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 16\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 10\n            }, this)\n          );\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this)\n  );\n};\n\n_s(Admin, \"ZFp2ZLEtGvZJnB6k1IDEFGHd1go=\", false, function () {\n  return [useTable];\n});\n\n_c = Admin;\nexport default Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["D:/Uni/2021/Semester 1/Soft Eng/GroupAssign/film-db/src/pages/admin.js"],"names":["React","styled","useTable","Admin","data","useMemo","col1","col2","columns","Header","accessor","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,QAAR,QAAuB,aAAvB;;AAIA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACvB,QAAMC,IAAI,GAAGJ,KAAK,CAACK,OAAN,CACT,MACA,CACE;AACEC,IAAAA,IAAI,EAAE,OADR;AACiBC,IAAAA,IAAI,EAAE;AADvB,GADF,EAIE;AACED,IAAAA,IAAI,EAAE,aADR;AACuBC,IAAAA,IAAI,EAAE;AAD7B,GAJF,EAOE;AACED,IAAAA,IAAI,EAAE,UADR;AACoBC,IAAAA,IAAI,EAAE;AAD1B,GAPF,CAFS,EAaT,EAbS,CAAb;AAgBA,QAAMC,OAAO,GAAGR,KAAK,CAACK,OAAN,CACZ,MAAM,CACJ;AACEI,IAAAA,MAAM,EAAE,UADV;AACsBC,IAAAA,QAAQ,EAAE;AADhC,GADI,EAIJ;AACED,IAAAA,MAAM,EAAE,UADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GAJI,CADM,EAUZ,EAVY,CAAhB;AAaA,QAAMC,aAAa,GAAGT,QAAQ,CAAC;AAAEM,IAAAA,OAAF;AAAWJ,IAAAA;AAAX,GAAD,CAA9B;AAGA,QAAM;AAEFQ,IAAAA,aAFE;AAIFC,IAAAA,iBAJE;AAMFC,IAAAA,YANE;AAQFC,IAAAA,IARE;AAUFC,IAAAA;AAVE,MAYFL,aAZJ;AAcA;AAAA;AACG;AAEJ,0BAAWC,aAAa,EAAxB;AAAA,8BAEA;AAAA,kBAEG;AAEDE,QAAAA,YAAY,CAACG,GAAb,CAAiBC,WAAW;AAAA;AAE1B;AAEA,2BAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,oBAEG;AAEDD,UAAAA,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM;AAAA;AAE5B;AAEA,6BAAQA,MAAM,CAACC,cAAP,EAAR;AAAA,sBAEG;AAEDD,YAAAA,MAAM,CAACE,MAAP,CAAc,QAAd;AAJF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAJF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAJF;AAAA;AAAA;AAAA;AAAA,cAFA,eAoCA,sBAAWV,iBAAiB,EAA5B;AAAA,kBAEG;AAEDE,QAAAA,IAAI,CAACE,GAAL,CAASO,GAAG,IAAI;AAEd;AAEAR,UAAAA,UAAU,CAACQ,GAAD,CAAV;AAEA;AAAA;AAEE;AAEA,+BAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,wBAEG;AAEDD,cAAAA,GAAG,CAACE,KAAJ,CAAUT,GAAV,CAAcU,IAAI,IAAI;AAEpB;AAEA,oCAEE,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,4BAEG;AAEDD,kBAAAA,IAAI,CAACJ,MAAL,CAAY,MAAZ;AAJF;AAAA;AAAA;AAAA;AAAA,wBAFF;AAYD,eAhBD;AAJF;AAAA;AAAA;AAAA;AAAA;AAJF;AA8BD,SApCD;AAJF;AAAA;AAAA;AAAA;AAAA,cApCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHC;AAqFH,CApIM;;GAAMpB,K;UA8BaD,Q;;;KA9BbC,K;AAsIb,eAAeA,KAAf","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {useTable} from 'react-table'\r\n\r\n\r\n\r\nexport const Admin = () => {\r\n    const data = React.useMemo(\r\n        () => \r\n        [\r\n          {\r\n            col1: 'Hello', col2: 'World',\r\n          },\r\n          {\r\n            col1: 'react-table', col2: 'rocks',\r\n          },\r\n          {\r\n            col1: 'whatever', col2: 'you want',\r\n          },\r\n        ],\r\n        []\r\n    )\r\n    \r\n    const columns = React.useMemo(\r\n        () => [\r\n          {\r\n            Header: 'Column 1', accessor: 'col1',\r\n          },\r\n          {\r\n            Header: 'Column 2',\r\n            accessor: 'col2',\r\n          },\r\n        ],\r\n        []\r\n    )\r\n    \r\n    const tableInstance = useTable({ columns, data })\r\n\r\n\r\n    const {\r\n\r\n        getTableProps,\r\n     \r\n        getTableBodyProps,\r\n     \r\n        headerGroups,\r\n     \r\n        rows,\r\n     \r\n        prepareRow,\r\n     \r\n    } = tableInstance\r\n\r\n    return (\r\n       // apply the table props\r\n\r\n   <table {...getTableProps()}>\r\n\r\n   <thead>\r\n\r\n     {// Loop over the header rows\r\n\r\n     headerGroups.map(headerGroup => (\r\n\r\n       // Apply the header row props\r\n\r\n       <tr {...headerGroup.getHeaderGroupProps()}>\r\n\r\n         {// Loop over the headers in each row\r\n\r\n         headerGroup.headers.map(column => (\r\n\r\n           // Apply the header cell props\r\n\r\n           <th {...column.getHeaderProps()}>\r\n\r\n             {// Render the header\r\n\r\n             column.render('Header')}\r\n\r\n           </th>\r\n\r\n         ))}\r\n\r\n       </tr>\r\n\r\n     ))}\r\n\r\n   </thead>\r\n\r\n   {/* Apply the table body props */}\r\n\r\n   <tbody {...getTableBodyProps()}>\r\n\r\n     {// Loop over the table rows\r\n\r\n     rows.map(row => {\r\n\r\n       // Prepare the row for display\r\n\r\n       prepareRow(row)\r\n\r\n       return (\r\n\r\n         // Apply the row props\r\n\r\n         <tr {...row.getRowProps()}>\r\n\r\n           {// Loop over the rows cells\r\n\r\n           row.cells.map(cell => {\r\n\r\n             // Apply the cell props\r\n\r\n             return (\r\n\r\n               <td {...cell.getCellProps()}>\r\n\r\n                 {// Render the cell contents\r\n\r\n                 cell.render('Cell')}\r\n\r\n               </td>\r\n\r\n             )\r\n\r\n           })}\r\n\r\n         </tr>\r\n\r\n       )\r\n\r\n     })}\r\n\r\n   </tbody>\r\n\r\n </table>\r\n    )\r\n}\r\n\r\nexport default Admin;"]},"metadata":{},"sourceType":"module"}