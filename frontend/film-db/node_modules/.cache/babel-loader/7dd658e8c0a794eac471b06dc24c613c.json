{"ast":null,"code":"var _jsxFileName = \"D:\\\\uni\\\\2021\\\\semester 1\\\\soft eng\\\\groupassign\\\\film-db\\\\src\\\\pages\\\\about.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './about.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst About = () => {\n  _s();\n\n  const [state, setState] = useState({\n    first: \"\",\n    last: \"\",\n    email: \"\",\n    userName: \"\",\n    pw: \"\",\n    year: 1990,\n    gender: \"\",\n    country: \"\",\n    user: \"\",\n    pCo: \"\",\n    phNum: \"\"\n  });\n\n  function handleSubmit() {\n    alert(state.first + \" \" + state.last + \" \" + state.email + \" \" + state.country + \" \" + state.pw + \" \" + state.userName + \" \" + state.year + \" \" + state.gender + \" \" + state.user + \" \" + state.pCo + \" \" + state.phNum);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Reg-Header\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"Reg-Form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Reg-Div\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"Reg-In-L\",\n            value: state.first,\n            onChange: ev => setState({ ...state,\n              first: ev.target.value\n            }),\n            placeholder: \"First Name..\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"Reg-In-R\",\n            value: state.last,\n            onChange: ev => setState({ ...state,\n              last: ev.target.value\n            }),\n            placeholder: \"Last Name..\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Reg-Div\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"Reg-In-L\",\n            value: state.email,\n            onChange: ev => setState({ ...state,\n              email: ev.target.value\n            }),\n            placeholder: \"example@domain.com\",\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"Reg-In-R\",\n            value: state.userName,\n            onChange: ev => setState({ ...state,\n              userName: ev.target.value\n            }),\n            placeholder: \"Enter Username..\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"Reg-In-L\",\n          value: state.pw,\n          onChange: ev => setState({ ...state,\n            pw: ev.target.value\n          }),\n          placeholder: \"Enter password..\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"Reg-In-R\",\n          value: state.year,\n          onChange: ev => setState({ ...state,\n            year: ev.target.value\n          }),\n          placeholder: \"1990\",\n          type: \"number\",\n          min: \"1901\",\n          max: \"2003\",\n          name: \"year\",\n          id: \"year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          required: true,\n          value: state.gender,\n          onChange: ev => setState({ ...state,\n            gender: ev.target.value\n          }),\n          className: \"Reg-Sel-T\",\n          name: \"Gender\",\n          id: \"gender\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            selected: true,\n            children: \"Select Gender..\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Prefer not to say\",\n            children: \"Prefer not to say\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Female\",\n            children: \"Female\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Male\",\n            children: \"Male\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Non-Binary\",\n            children: \"Non-Binary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Transgender\",\n            children: \"Transgender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Intersex\",\n            children: \"Intersex\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          required: true,\n          value: state.country,\n          onChange: ev => setState({ ...state,\n            country: ev.target.value\n          }),\n          className: \"Reg-Sel\",\n          name: \"Country\",\n          id: \"country\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            selected: true,\n            children: \"Country of residence..\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Australia\",\n            children: \"Australia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"UK\",\n            children: \"UK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Indonesia\",\n            children: \"Indonesia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Senegal\",\n            children: \"Senegal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Uruguay\",\n            children: \"Uruguay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          required: true,\n          value: state.user,\n          onChange: ev => setState({ ...state,\n            user: ev.target.value\n          }),\n          className: \"Reg-Sel\",\n          name: \"Type\",\n          id: \"type\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            selected: true,\n            children: \"User Type..\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Basic User\",\n            children: \"Basic User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Production Company\",\n            children: \"Production Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Critic\",\n            children: \"Critic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), state.user.match(\"Production Company\") ? /*#__PURE__*/_jsxDEV(\"input\", {\n          value: state.pCo,\n          onChange: ev => setState({ ...state,\n            pCo: ev.target.value\n          }),\n          className: \"Reg-In-F\",\n          placeholder: \"Company Name..\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this) : null, state.user.match(\"Critic\") ? /*#__PURE__*/_jsxDEV(\"input\", {\n          value: state.phNum,\n          onChange: ev => setState({ ...state,\n            phNum: ev.target.value\n          }),\n          className: \"Reg-In-F\",\n          placeholder: \"0400123456\",\n          type: \"tel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"Reg-Submit\",\n          type: \"submit\",\n          value: \"SUBMIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(About, \"vQ8HetNHvfWvcSGOMgeHvtW6Etg=\");\n\n_c = About;\nexport default About;\n\nvar _c;\n\n$RefreshReg$(_c, \"About\");","map":{"version":3,"sources":["D:/uni/2021/semester 1/soft eng/groupassign/film-db/src/pages/about.js"],"names":["React","useState","axios","About","state","setState","first","last","email","userName","pw","year","gender","country","user","pCo","phNum","handleSubmit","alert","ev","target","value","match"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport './about.css'\r\nimport axios from 'axios'\r\nconst About = () => {\r\n\r\n    const [state,setState] = useState({\r\n        first:\"\",\r\n        last:\"\",\r\n        email:\"\",\r\n        userName:\"\",\r\n        pw:\"\",\r\n        year:1990,\r\n        gender:\"\",\r\n        country:\"\",\r\n        user:\"\",\r\n        pCo:\"\",\r\n        phNum:\"\"\r\n    });\r\n\r\n    \r\n    function handleSubmit() {\r\n        alert(state.first + \" \" +\r\n            state.last + \" \" +\r\n            state.email + \" \" +\r\n            state.country +\" \" +\r\n            state.pw +\" \" +\r\n            state.userName +\" \" +\r\n            state.year +\" \" +\r\n            state.gender +\" \" +\r\n            state.user +\" \" +\r\n            state.pCo + \" \" +\r\n            state.phNum);\r\n    };\r\n    \r\n    return (\r\n        <div> \r\n        \r\n            <header className=\"Reg-Header\">\r\n                <form className=\"Reg-Form\" onSubmit={handleSubmit}>\r\n                    <div className = \"Reg-Div\">\r\n                        <input\r\n                            className=\"Reg-In-L\"\r\n                            value={state.first}\r\n                            onChange={(ev) => setState({...state, first: ev.target.value})}\r\n                            placeholder=\"First Name..\"\r\n                            type=\"text\"\r\n                        />\r\n                        <input\r\n                            className=\"Reg-In-R\"\r\n                            value={state.last}\r\n                            onChange={(ev) => setState({...state, last: ev.target.value})}\r\n                            placeholder=\"Last Name..\"\r\n                            type=\"text\"\r\n                        />\r\n                    </div>\r\n                    <div className = \"Reg-Div\">\r\n                        <input \r\n                            className=\"Reg-In-L\"\r\n                            value={state.email}\r\n                            onChange={(ev) => setState({...state, email: ev.target.value})}\r\n                            placeholder=\"example@domain.com\"\r\n                            type=\"email\" \r\n                        />\r\n                        <input \r\n                            className=\"Reg-In-R\"\r\n                            value={state.userName}\r\n                            onChange={(ev) => setState({...state, userName: ev.target.value})}\r\n                            placeholder=\"Enter Username..\"\r\n                            type=\"text\" \r\n                        />\r\n                    </div>\r\n                    <input \r\n                        className=\"Reg-In-L\"\r\n                        value={state.pw}\r\n                        onChange={(ev) => setState({...state, pw: ev.target.value})}\r\n                        placeholder=\"Enter password..\"\r\n                        type=\"password\" \r\n                    />\r\n                    \r\n                    <input\r\n                        className=\"Reg-In-R\"\r\n                        value={state.year}\r\n                        onChange={(ev) => setState({...state, year: ev.target.value})}\r\n                        placeholder=\"1990\"\r\n                        type=\"number\"\r\n                        min=\"1901\"\r\n                        max=\"2003\"\r\n                        name=\"year\"\r\n                        id=\"year\"\r\n                    />\r\n                    \r\n                    <select required\r\n                        value={state.gender} \r\n                        onChange={(ev) => setState({...state, gender: ev.target.value})}\r\n                        className=\"Reg-Sel-T\"\r\n                        name=\"Gender\" \r\n                        id=\"gender\">\r\n                        <option value=\"\" disabled selected>Select Gender..</option>\r\n                        <option value=\"Prefer not to say\">Prefer not to say</option>\r\n                        <option value=\"Female\">Female</option>\r\n                        <option value=\"Male\">Male</option>\r\n                        <option value=\"Non-Binary\">Non-Binary</option>\r\n                        <option value=\"Transgender\">Transgender</option>\r\n                        <option value=\"Intersex\">Intersex</option>\r\n                    </select>\r\n                    \r\n                    <select required\r\n                        value={state.country}\r\n                        onChange={(ev) => setState({...state, country: ev.target.value})} \r\n                        className=\"Reg-Sel\"\r\n                        name=\"Country\"\r\n                        id=\"country\">\r\n                        <option value=\"\" disabled selected>Country of residence..</option>\r\n                        <option value=\"Australia\">Australia</option>\r\n                        <option value=\"UK\">UK</option>\r\n                        <option value=\"Indonesia\">Indonesia</option>\r\n                        <option value=\"Senegal\">Senegal</option>\r\n                        <option value=\"Uruguay\">Uruguay</option>\r\n                    </select>\r\n                    <select required\r\n                        value={state.user} \r\n                        onChange={(ev) => setState({...state, user: ev.target.value})}\r\n                        className=\"Reg-Sel\"\r\n                        name=\"Type\" \r\n                        id=\"type\">\r\n                        <option value=\"\" disabled selected>User Type..</option>\r\n                        <option \r\n                            value=\"Basic User\">\r\n                            Basic User\r\n                        </option>\r\n                        <option \r\n                            value=\"Production Company\"> \r\n                            Production Company\r\n                        </option>\r\n                        <option \r\n                            value=\"Critic\">\r\n                            Critic\r\n                        </option>\r\n                    </select>\r\n                    {\r\n                        state.user.match(\"Production Company\")?\r\n                        <input\r\n                            value={state.pCo}\r\n                            onChange={(ev) => setState({...state, pCo: ev.target.value})}\r\n                            className=\"Reg-In-F\"\r\n                            placeholder=\"Company Name..\"\r\n                            type=\"text\"\r\n                        />\r\n                        :null\r\n                    }  \r\n                    {\r\n                        state.user.match(\"Critic\")?\r\n                        <input\r\n                            value={state.phNum}\r\n                            onChange={(ev) => setState({...state, phNum: ev.target.value})}\r\n                            className=\"Reg-In-F\"\r\n                            placeholder=\"0400123456\"\r\n                            type=\"tel\"\r\n                        />\r\n                        :null\r\n                    }\r\n                    <input \r\n                        className=\"Reg-Submit\"\r\n                        type=\"submit\" \r\n                        value=\"SUBMIT\" \r\n                    />\r\n                </form>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About"]},"metadata":{},"sourceType":"module"}