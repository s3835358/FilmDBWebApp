{"ast":null,"code":"var _jsxFileName = \"D:\\\\Uni\\\\2021\\\\Semester 1\\\\Soft Eng\\\\GroupAssign\\\\film-db\\\\src\\\\pages\\\\admin.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useTable } from 'react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Admin = () => {\n  _s();\n\n  const data = React.useMemo(() => [{\n    col1: 'Hello',\n    col2: 'World'\n  }, {\n    col1: 'react-table',\n    col2: 'rocks'\n  }, {\n    col1: 'whatever',\n    col2: 'you want'\n  }], []);\n  const columns = React.useMemo(() => [{\n    Header: 'Column 1',\n    accessor: 'col1'\n  }, {\n    Header: 'Column 2',\n    accessor: 'col2'\n  }], []);\n  const tableInstance = useTable({\n    columns,\n    data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render('Header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: // Loop over the table rows\n      rows.map(row => {\n        // Prepare the row for display\n        prepareRow(row);\n        return (\n          /*#__PURE__*/\n          // Apply the row props\n          _jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: // Loop over the rows cells\n            row.cells.map(cell => {\n              // Apply the cell props\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: // Render the cell contents\n                cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 16\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 10\n          }, this)\n        );\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Admin, \"ZFp2ZLEtGvZJnB6k1IDEFGHd1go=\", false, function () {\n  return [useTable];\n});\n\n_c = Admin;\nexport default Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["D:/Uni/2021/Semester 1/Soft Eng/GroupAssign/film-db/src/pages/admin.js"],"names":["React","styled","useTable","Admin","data","useMemo","col1","col2","columns","Header","accessor","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,QAAR,QAAuB,aAAvB;;AAIA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACvB,QAAMC,IAAI,GAAGJ,KAAK,CAACK,OAAN,CACT,MACA,CACE;AACEC,IAAAA,IAAI,EAAE,OADR;AACiBC,IAAAA,IAAI,EAAE;AADvB,GADF,EAIE;AACED,IAAAA,IAAI,EAAE,aADR;AACuBC,IAAAA,IAAI,EAAE;AAD7B,GAJF,EAOE;AACED,IAAAA,IAAI,EAAE,UADR;AACoBC,IAAAA,IAAI,EAAE;AAD1B,GAPF,CAFS,EAaT,EAbS,CAAb;AAgBA,QAAMC,OAAO,GAAGR,KAAK,CAACK,OAAN,CACZ,MAAM,CACJ;AACEI,IAAAA,MAAM,EAAE,UADV;AACsBC,IAAAA,QAAQ,EAAE;AADhC,GADI,EAIJ;AACED,IAAAA,MAAM,EAAE,UADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GAJI,CADM,EAUZ,EAVY,CAAhB;AAaA,QAAMC,aAAa,GAAGT,QAAQ,CAAC;AAAEM,IAAAA,OAAF;AAAWJ,IAAAA;AAAX,GAAD,CAA9B;AAGA,QAAM;AAEFQ,IAAAA,aAFE;AAIFC,IAAAA,iBAJE;AAMFC,IAAAA,YANE;AAQFC,IAAAA,IARE;AAUFC,IAAAA;AAVE,MAYFL,aAZJ;AAcA,sBACI,sBAAWC,aAAa,EAAxB;AAAA,4BACI;AAAA,gBAAQE,YAAY,CAACG,GAAb,CAAiBC,WAAW,iBAC5B,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,kBACKD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,iBAC/B,mBAAQA,MAAM,CAACC,cAAP,EAAR;AAAA,oBACCD,MAAM,CAACE,MAAP,CAAc,QAAd;AADD;AAAA;AAAA;AAAA;AAAA,gBADC;AADL;AAAA;AAAA;AAAA;AAAA,cADA;AAAR;AAAA;AAAA;AAAA;AAAA,YADJ,eAYJ,sBAAWV,iBAAiB,EAA5B;AAAA,gBACK;AACDE,MAAAA,IAAI,CAACE,GAAL,CAASO,GAAG,IAAI;AAChB;AACAR,QAAAA,UAAU,CAACQ,GAAD,CAAV;AACA;AAAA;AACC;AACA,6BAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,sBACG;AACDD,YAAAA,GAAG,CAACE,KAAJ,CAAUT,GAAV,CAAcU,IAAI,IAAI;AACpB;AACA,kCACE,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,0BACG;AACDD,gBAAAA,IAAI,CAACJ,MAAL,CAAY,MAAZ;AAFF;AAAA;AAAA;AAAA;AAAA,sBADF;AAQD,aAVD;AAFF;AAAA;AAAA;AAAA;AAAA;AAFD;AAoBF,OAvBE;AAFJ;AAAA;AAAA;AAAA;AAAA,YAZI;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4CH,CA3FM;;GAAMpB,K;UA8BaD,Q;;;KA9BbC,K;AA6Fb,eAAeA,KAAf","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {useTable} from 'react-table'\r\n\r\n\r\n\r\nexport const Admin = () => {\r\n    const data = React.useMemo(\r\n        () => \r\n        [\r\n          {\r\n            col1: 'Hello', col2: 'World',\r\n          },\r\n          {\r\n            col1: 'react-table', col2: 'rocks',\r\n          },\r\n          {\r\n            col1: 'whatever', col2: 'you want',\r\n          },\r\n        ],\r\n        []\r\n    )\r\n    \r\n    const columns = React.useMemo(\r\n        () => [\r\n          {\r\n            Header: 'Column 1', accessor: 'col1',\r\n          },\r\n          {\r\n            Header: 'Column 2',\r\n            accessor: 'col2',\r\n          },\r\n        ],\r\n        []\r\n    )\r\n    \r\n    const tableInstance = useTable({ columns, data })\r\n\r\n\r\n    const {\r\n\r\n        getTableProps,\r\n     \r\n        getTableBodyProps,\r\n     \r\n        headerGroups,\r\n     \r\n        rows,\r\n     \r\n        prepareRow,\r\n     \r\n    } = tableInstance\r\n\r\n    return (\r\n        <table {...getTableProps()}>\r\n            <thead>{headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => (\r\n                        <th {...column.getHeaderProps()}>\r\n                        {column.render('Header')}\r\n                    </th>\r\n                ))}\r\n       </tr>\r\n     ))}\r\n    </thead>\r\n    {/* Apply the table body props */}\r\n    <tbody {...getTableBodyProps()}>\r\n        {// Loop over the table rows\r\n        rows.map(row => {\r\n        // Prepare the row for display\r\n        prepareRow(row)\r\n        return (\r\n         // Apply the row props\r\n         <tr {...row.getRowProps()}>\r\n           {// Loop over the rows cells\r\n           row.cells.map(cell => {\r\n             // Apply the cell props\r\n             return (\r\n               <td {...cell.getCellProps()}>\r\n                 {// Render the cell contents\r\n                 cell.render('Cell')}\r\n               </td>\r\n\r\n             )\r\n\r\n           })}\r\n\r\n         </tr>\r\n\r\n       )\r\n\r\n     })}\r\n\r\n   </tbody>\r\n\r\n </table>\r\n    )\r\n}\r\n\r\nexport default Admin;"]},"metadata":{},"sourceType":"module"}